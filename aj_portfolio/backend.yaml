# DEPLOYMENT
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  # Name
  name: backend
  # Labels
  labels:
    app: wordpress
    tier: backend
# POD
spec:
  replicas: 1
  selector:
    # Select nodes
    matchLabels:
      app: wordpress
      tier: backend
  strategy:
    type: RollingUpdate
  template:
    metadata:
      # Labels
      labels:
        app: wordpress
        tier: backend
    spec:
      # Volumes
      volumes:
        # WordPress uploads
        - name: wordpress-persistent-volume
          persistentVolumeClaim:
            claimName: wordpress-pvc
        # WordPress config
        - name: wordpress-config
          secret:
            secretName: backend
            items:
              - key: config
                path: wp-config.php
      # Containers
      containers:
        # Image
        - image: ajuthaya/nginx-php
          imagePullPolicy: Always
          name: backend-pod
          # Resources
          resources:
            #limits:
            #  cpu: 500m
            #  memory: 500Mi
            #requests:
            #  cpu: 250m
            #  memory: 250Mi
          # Mount volumes
          volumeMounts:
            - name: wordpress-persistent-volume
              mountPath: /opt/app/aj_portfolio/data/wordpress
            - name: wordpress-config
              mountPath: /opt/app/aj_portfolio/config/wordpress
          # Map ports
          ports:
            - containerPort: 80
              name: wordpress
          # Environment variables
          env:
            # MYSQL
            - name: WORDPRESS_DB_HOST
              value: database
            - name: WORDPRESS_DB
              valueFrom:
                secretKeyRef:
                  name: passwords
                  key: MYSQL_DATABASE
            - name: WORDPRESS_DB_USER
              valueFrom:
                secretKeyRef:
                  name: passwords
                  key: MYSQL_USER
            - name: WORDPRESS_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: passwords
                  key: MYSQL_PASSWORD
          # Readiness
          readinessProbe:
            httpGet:
              path: /wp-json
              port: 80
            initialDelaySeconds: 10
            timeoutSeconds: 5
            periodSeconds: 5
          # Liveness
          livenessProbe:
            httpGet:
              path: /wp-json
              port: 80
            initialDelaySeconds: 20
            timeoutSeconds: 15
            periodSeconds: 30
          # Startup commands
          lifecycle:
            postStart:
              exec:
                command: [
                  "/bin/sh",
                  "-c",
                  # Clone project
                  # Copy wordpress config into project folder
                  # Clean out nginx view folder
                  # Copy project into nginx view folder
                  # Link uploaded files
                  # Change owner of uploaded files
                  "git clone https://github.com/AjUthaya/aj_portfolio-backend-wordpress.git /opt/app/aj_portfolio/backend &&
                  cp /opt/app/aj_portfolio/config/wordpress/wp-config.php /opt/app/aj_portfolio/backend/wp-config.php &&
                  rm -R /usr/share/nginx/html/* &&
                  cp -R /opt/app/aj_portfolio/backend/* /usr/share/nginx/html &&
                  ln -s /opt/app/aj_portfolio/data/wordpress/uploads /usr/share/nginx/html/wp-content &&
                  chown -R www-data:www-data /usr/share/nginx/html",
                ]

---
# SERVICE
apiVersion: v1
kind: Service
metadata:
  name: backend
  labels:
    app: wordpress
    tier: backend
spec:
  # Request handler
  type: LoadBalancer
  # Select pods
  selector:
    app: wordpress
    tier: backend
  # Map ports
  ports:
    - port: 80
      nodePort: 30001
      targetPort: 80

