##### MYSQL #####
# DEPLOYMENT
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  # Name
  name: database-deployment
  # Labels
  labels:
    app: mysql
    tier: database
# POD
spec:
  replicas: 1
  selector:
    # Nodes that match labels
    matchLabels:
      app: mysql
      tier: database
  strategy:
    type: RollingUpdate
  template:
    metadata:
      # Labels
      labels:
        app: mysql
        tier: database
    spec:
      containers:
        # Image
        - image: mysql:5.6
          # Name
          name: database-pod
          # Environment variables
          env:
            # MYSQL: Root Password
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql
                  key: ROOT_PASSWORD
            # MYSQL: Database
            - name: MYSQL_DATABASE
              valueFrom:
                secretKeyRef:
                  name: mysql
                  key: DATABASE
            # MYSQL: Username
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: mysql
                  key: USER
            # MYSQL: Password
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql
                  key: PASSWORD
          # Map exposed ports
          ports:
            - containerPort: 3306
          # Mount volume locations
          volumeMounts:
            - name: mysql-persistent-volume
              mountPath: /var/lib/mysql
      # Connect persistent volumes
      volumes:
        - name: mysql-persistent-volume
          persistentVolumeClaim:
            claimName: mysql-pvc

---
# SERVICE
apiVersion: v1
kind: Service
metadata:
  # Name
  name: database-service
  # Labels
  labels:
    app: mysql
    tier: database
spec:
  selector:
    app: mysql
    tier: database
  clusterIP: None
##### MYSQL #####
#
#
#
#
#
---
##### NGINX #####
# DEPLOYMENT
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  # Name
  name: backend-deployment
  # Labels
  labels:
    app: nginx
    tier: backend
# POD
spec:
  replicas: 1
  selector:
    # Nodes that match labels
    matchLabels:
      app: nginx
      tier: backend
  strategy:
    type: RollingUpdate
  template:
    metadata:
      # Labels
      labels:
        app: nginx
        tier: backend
    spec:
      containers:
        # Image
        - image: ajuthaya/nginx-php
          # Name
          name: backend-pod
          # Map exposed ports
          ports:
            - containerPort: 80
          # Mount volume locations
          volumeMounts:
            - name: app-persistent-volume
              mountPath: /opt/app
            - name: nginx-config
              mountPath: /opt/app/aj_portfolio/config/nginx
            - name: wordpress-config
              mountPath: /opt/app/aj_portfolio/config/wordpress
            - name: react-config
              mountPath: /opt/app/aj_portfolio/config/react
          # Run on startup
          lifecycle:
            postStart:
              exec:
                # Copy nginx config
                command:
                  [
                    "/bin/sh",
                    "-c",
                    "cp /opt/app/aj_portfolio/config/nginx/default.conf /etc/nginx/conf.d/default.conf",
                  ]
      # Connect persistent volumes
      volumes:
        # APP PVC
        - name: app-persistent-volume
          persistentVolumeClaim:
            claimName: app-pvc
        # NGINX CONFIG
        - name: nginx-config
          configMap:
            name: nginx
            items:
              - key: config
                path: default.conf
        # WORDPRESS CONFIG
        - name: wordpress-config
          secret:
            secretName: wordpress
            items:
              - key: config
                path: wp-config.php
        # React CONFIG
        - name: react-config
          secret:
            secretName: react
            items:
              - key: config
                path: local.js

---
# SERVICE
apiVersion: v1
kind: Service
metadata:
  # Name
  name: backend-service
  # Labels
  labels:
    app: nginx
    tier: backend
spec:
  type: NodePort
  ports:
    - protocol: TCP
      port: 80
  selector:
    app: nginx
    tier: backend
##### NGINX #####
